image;text
image100.png;Desvio Padrão = s = sqrt(variancia).
image101.png;Percentile: P, p porcento dos valores estão abaixo de p e (100-p) estão acima de p.
image102.png;Percentile = Quantile ou 0.8q = 80 percentile
image103.png;Percetiles = order statistics
image104.png;Example list[T], sendo T um tipo que foi escolhidod ou limitado por bound
image105.png;Usa se a seguinte sintaxe
image106.png;NumberT = TypeVar('NumberT', float, decimal, Fraction), omitindo os tipos
image107.png;del mode(data: Iterabler [NumberT]) -> NumberT
image108.png;Copiar Código 8.19
image109.png;8.21
image10.png;_ Necessario de precisar fazer algo após a inif das variáveis (Validação, outros fields depedentes de fields inicializados)
image110.png;A restrição aceita hashble e seus subtipos também.
image111.png;HashableT = TypeVar('HashableT', bound Hashable)
image112.png;Callable ([],int) subtype ([], float)
image113.png;Callable [[int], None] No subtype [[float,None]]
image114.png;_ Normalmente utilizado para função que dão raises de exception
image115.png;Syntax: Callable[[ParamType1,ParamType2], ReturnType2]
image116.png;Parameterized Generics and TypeVar
image117.png;_ Com bound exemplo 8-18
image118.png;_ São formas de Duck Typing, pois basta que a seguinte estrutura implemente uma função
image119.png;Imperfect Typing and Strong Testing
image11.png;Copiar Código 5.17 e explicar
image120.png;Boxplots usa Percentiles
image121.png;_ Percentiles são bons para sumarizar as pontas 95th, 99th
image122.png;no Boxplot o último whisker não vai 1.5 IQR do percentil. Os circulos são outliers
image123.png;Annotating Positional Only and Variadic Parameters
image124.png;Bins largos largos pode esconder features importante do modelo. Se for muito pequeno e granular, fica dificíl ver o Big Picture do modelo
image125.png;As Barras são contínuas
image126.png;*Skewness e Kurtosis, são momentos que normalmentme não são calculadas mas sim observadas de gráficos
image127.png;Propensão de ter valores extremos
image128.png;Distorcido para pequenos ou grande valores.
image129.png;Density Plots and Estimates
image12.png;nix lock to update somente um input do flake
image130.png;_ value_counts()
image131.png;A escala de y é diferente
image132.png;A área sobre a curva é 1
image133.png;Calcule areas sobre dois pontos qualquere
image134.png;Histogramas são plots de densidades e estimativas como linhas podem ser gerados para representar a densidade kernel density estimate
image135.png;_ 1 ou 0, proporção de 1
image136.png;Categorias, proporção de categorias
image137.png;Se Usa Bar Charts, diferente de histograma onde cada x representa uma ciosa.
image138.png;Histogram representa valores de uma variável única
image139.png;_ Pode se usar a moda para ver os valores mais comuns
image13.png;Ref Ramalho, 2022, 183-187
image141.png;Explaining Binary and Categorical Data
image142.png;_Probability: Proportion times it will occur
image143.png;Entre -1 e 1
image144.png;Correlation Matriz Diag is = 1
image145.png;Use o corrplot/heatmaps
image146.png;Valor esperado: Variável discretizada x Probabilidade
image147.png;Spearman ou Kendalls são baseado em ranks e são robustos aos outliers. Além de lidar com algumas não-lineraridades
image148.png;Small datasets
image149.png;A correlação é sensível aos outliers
image14.png;Data Classes evita que o código todo seja escrito, se você está escrevendo é um sinal de problema
image150.png;Exploring two or More Variables
image151.png;Scatterplots são bons para números pequenos
image152.png;Hexagonal bining para milhões de linhas
image153.png;Copiar fígura 1.8
image154.png;ScatterPlot
image155.png;Tabela de contigência
image156.png;Separa categoria e proporção
image157.png;tablea 1.8
image158.png;Categórico e Númerico
image159.png;Múltiplo Boxplots
image15.png;Copiar código 5.18
image160.png;Ou o lpot violino
image161.png;Two categorical variables
image162.png;Closures utilizam variáveis livres
image163.png;Closures são feitos com funções aninhadas
image164.png;Essas variaveis não são globais ou locais, mas são de funções mais externas
image165.png;Copiar código 9.8 e 9.9
image166.png;Ramalho, 2022, 311-314
image167.png;O violiono mostra a distribuição também
image168.png;=> Target = decorate(target)
image169.png;Ramalho, 2022, 302-303
image16.png;Inmutável, mas se precisar mudar asdict, não deve ser usado e builder diferentes deve ser implemen
image170.png;tome nota sobre os essential facts
image171.png;Decorator é um callable que usa outra função com argumento da função decoradad
image172.png;@decorate
image173.png;factorial = clock(factorial)
image174.png;Essa função vira "clocked" (referência)
image175.png;>>> import clockdeco_demop
image176.png;>>> clockdeco_demo.factorial.__name__
image177.png;Troca a função que aceita os mesmo argumentos e retorna o que o decorador deve retorna, enquanto faz processamento extra
image178.png;def factorial(n) Return if n < 2 else n*factorial(n-1)
image179.png;Copiar código 9.16
image17.png;_ Serve para qualquer classe
image181.png;Teorias com fortes assuptions cientista de dados
image182.png;devem focar no procedimento de Sample e
image183.png;Para suportar keyword arguments: functools.wraps(func)
image184.png;Saber quando o dado vem de processos físicos
image185.png;e podem ser moldados
image186.png;Nesses casos podemos assumir algumas coisas
image187.png;Teorícas que nos ajudam a ter insights
image188.png;Fenomenos binomais (jogar moeda para cima,
image189.png;fraud ou não, comprar ou não, podem ser
iamge18.png;Copiar Código 5.22
image190.png;modelados assumindos uma distribuição binomial
image191.png;dos dados em mão
image192.png;Random Sampling é a mehor forma de
image193.png;Uma sample precisa ser representativa da
image194.png;sua população mas nem sempre será possível
image195.png;menor quantiade de dados é melhor para
image196.png;dados que sejam bons
image197.png;Sample: Um sub conjunto dos dados
image198.png;Dados massivos são importantes quando eles
image199.png;Sample mean: x, Population Mean: u
image19.png;Data class as Intermediate Representation
image1.png; result contém o resultado da derivação construída
image200.png;Gerar samples estratificadas é difícil pois é
image201.png;necessário saber quais grupos dividir
image202.png;ticar qeu acontece durante o processo de
image203.png;missing data e outliers são importantes
image204.png;A maioria dos decorados muda a função
image205.png;Decoradores são definidos em um módulo e
image206.png;Ramalho, 2022, p308
image207.png;medicão ou amostragem. Possui uma direção
image208.png;nos dados ou responde sua pergunta
image209.png;Normalmente se tem "high confidence" no selection
image20.png;Ramalho, 2022, 190 - 196
image210.png;Data Snooping: procurar incansvelmente
image211.png;no dado até algo interessante apareça
image212.png;vast search effect: diferente modelos com diferentes
image213.png;questões em datasets largos, uma hora você vai
image214.png;Voçe forçadamente, faz uma ação que provoca vies
image215.png;Previne: Holdout dataset (mais de 1)
image216.png;Regression to the Mean
image217.png;Focar em valores extremo é uma forma de
image218.png;achar algo interessante.
image219.png;Serve para tipos imutáveis, pois
image21.png;Copiar segundo código, primeiro atributo tem que ser Asia
image220.png;Essa variável local não existe e não
image221.png;pode ser modificada
image222.png;keyword nonlocal
image223.png;copiar código 9.12 e o seu erro
image224.png;copiar código 9.13
image225.png;copiar Variable Lookup Logic em outra
image226.png;Ramalho, 2022, 315-317
image227.png;Quando esse tipo muda, acba-se criando uma
image228.png;precedência caso exista umna global e uma
image229.png;dentro da função(toma procedência)
image22.png;"==" compara os valores, "is" compara a referência
image230.png;Se caso a vriável dentro da função
image231.png;é chamada com intenção de ler a variável
image232.png;global, é necessário: global variável
image233.png;A variaǘel de mesmo nome pode ser alterada
image234.png;As variáveis possuem escopo, e existe uma
image235.png;Ramalho, 2022, 308-3011
image236.png;Roda em tempo de import
image237.png;Copia código 9.2 eas respostas depois do
image238.png;Copiar também o impor abaixo
image239.png;Ramalho, 2022, p306-307
image23.png;_ Variáveis são labels e não caixas
image240.png;depois copiar código página 110
image241.png;distribution cai com probabilidade x%
image242.png;level de confiança, quanto maior, mais largo
image243.png;Quanto menor a sample também mais largo
image244.png;90% engloba 90% de boostrap da sampling
image245.png;distribution de um estatistica
image246.png;cache, lru_cache, single dispatch
image247.png;cache salva os resultados das chamadas
image248.png;É um intervalo onde o sampling
image249.png;Copiar código 9.18 -> Mostre como fica stacked
image24.png;Compara a identidade
image250.png;Cache é para comando rápidos pois pode
image251.png;Todos os argumentos da função precisam
image252.png;ser hasheáveis, pois são salvos em um
image253.png;São ótimos para APIs remotas
image254.png;lru_cache pode se usar o maxsize para
image255.png;setar o tamanho da cache
image256.png;anteriores fazendo com que o processo seja
image257.png;taped==true f(1) e f(1.0) são guardados
image258.png;Single Dispatch deixa que uma função
image259.png;seja implementa diferentes comportamentos e
image25.png;- É viáviel utilizar o "is" se comparar com Singleton, por exemplo "None"
image260.png;a chamada é de acordo com o primeiro
image261.png;Imita overloading de java
image262.png;Use collections.abc e protocols para
image263.png;Least Recently Used: As antigas não lidas
image264.png;*Evite tipos concretos para a compatibilidade
image265.png;- Suporte para fritura classes e classes virtuais
image266.png;Ramalho, 202, 320-329
image267.png;Copiar código 9.20 e 9.19
image268.png;necessário fazer uma Fabrica de decoradores.
image269.png;ou seja uma função que aceita argumento e
image26.png;- tuplas são imutáveis mas seu conteúdo pode não ser. Uma lista por exemplo, dado isso, algumas tupls não são hasheáveis
image270.png;retornar uma decorador
image271.png;Copiar código 9.22
image272.png; Para se usar um decorador parametrizado
image273.png;normais de função
image274.png;The Parameterized Clock Decoration
image275.png;Copiar código 9.24 // falar sobre **locals
image276.png;Ramalho, 2022, 329-335
image277.png;Sampling Distribution: É a distribuição de
image278.png;uma amostra estística sobre várias amstras
image279.png;Copiar 9.23 para closures ou chamada
image27.png;Qual usar "==" ou "is"
image280.png;de 5 amostras é uma sample da sampling
image281.png;Sample Statistic
